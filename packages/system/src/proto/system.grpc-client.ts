/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter server_generic,client_grpc1,eslint_disable,ts_nocheck
// @generated from protobuf file "system.proto" (syntax proto3)
// tslint:disable
// @ts-nocheck
import { SystemServer } from "./system";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { JumpgateInfo } from "./system";
import type { SystemServerInfo } from "./system";
import type { ChatMessage } from "./system";
import type { Empty } from "./system";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service SystemServer
 */
export interface ISystemServerClient {
    /**
     * @generated from protobuf rpc: Ping(Empty) returns (Empty);
     */
    ping(input: Empty, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    ping(input: Empty, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    ping(input: Empty, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    ping(input: Empty, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: SendChatMessage(ChatMessage) returns (Empty);
     */
    sendChatMessage(input: ChatMessage, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    sendChatMessage(input: ChatMessage, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    sendChatMessage(input: ChatMessage, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    sendChatMessage(input: ChatMessage, callback: (err: grpc.ServiceError | null, value?: Empty) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: OpenJumpgate(SystemServerInfo) returns (JumpgateInfo);
     */
    openJumpgate(input: SystemServerInfo, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: JumpgateInfo) => void): grpc.ClientUnaryCall;
    openJumpgate(input: SystemServerInfo, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: JumpgateInfo) => void): grpc.ClientUnaryCall;
    openJumpgate(input: SystemServerInfo, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: JumpgateInfo) => void): grpc.ClientUnaryCall;
    openJumpgate(input: SystemServerInfo, callback: (err: grpc.ServiceError | null, value?: JumpgateInfo) => void): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service SystemServer
 */
export class SystemServerClient extends grpc.Client implements ISystemServerClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: Ping(Empty) returns (Empty);
     */
    ping(input: Empty, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Empty) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Empty) => void), callback?: ((err: grpc.ServiceError | null, value?: Empty) => void)): grpc.ClientUnaryCall {
        const method = SystemServer.methods[0];
        return this.makeUnaryRequest<Empty, Empty>(`/${SystemServer.typeName}/${method.name}`, (value: Empty): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): Empty => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: SendChatMessage(ChatMessage) returns (Empty);
     */
    sendChatMessage(input: ChatMessage, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Empty) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: Empty) => void), callback?: ((err: grpc.ServiceError | null, value?: Empty) => void)): grpc.ClientUnaryCall {
        const method = SystemServer.methods[1];
        return this.makeUnaryRequest<ChatMessage, Empty>(`/${SystemServer.typeName}/${method.name}`, (value: ChatMessage): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): Empty => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: OpenJumpgate(SystemServerInfo) returns (JumpgateInfo);
     */
    openJumpgate(input: SystemServerInfo, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: JumpgateInfo) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: JumpgateInfo) => void), callback?: ((err: grpc.ServiceError | null, value?: JumpgateInfo) => void)): grpc.ClientUnaryCall {
        const method = SystemServer.methods[2];
        return this.makeUnaryRequest<SystemServerInfo, JumpgateInfo>(`/${SystemServer.typeName}/${method.name}`, (value: SystemServerInfo): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): JumpgateInfo => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
